--- src/Terraria/Terraria/NPC.cs
+++ src/TerraAngel/Terraria/NPC.cs
@@ -14,7 +_,6 @@
 using Terraria.GameContent.Drawing;
 using Terraria.GameContent.Events;
 using Terraria.GameContent.ItemDropRules;
-using Terraria.GameContent.RGB;
 using Terraria.GameContent.Tile_Entities;
 using Terraria.GameContent.UI;
 using Terraria.Graphics.CameraModifiers;
@@ -421,7 +_,27 @@
         }
     }
 
-    public string TypeName => Lang.GetNPCNameValue(netID);
+    public string TypeName
+    {
+        get
+        {
+            string value = Lang.GetNPCNameValue(netID);
+
+            if (ClientConfig.Settings.ShowDetailedTooltips)
+            {
+                value += $" [{type}/{InternalRepresentation.GetNPCIDName(type)}";
+
+                if (netID != type)
+                {
+                    value += $"{netID}/{InternalRepresentation.GetNPCIDName(netID)}";
+                }
+
+                value += "]";
+            }
+
+            return value;
+        }
+    }
     public string FullName
     {
         get
@@ -435,6 +_,20 @@
         }
     }
 
+    public string TypeNameDefault => Lang.GetNPCNameValue(netID);
+    public string FullNameDefault
+    {
+        get
+        {
+            if (!HasGivenName)
+            {
+                return TypeNameDefault;
+            }
+
+            return Language.GetTextValue("Game.NPCTitle", _givenName, TypeNameDefault);
+        }
+    }
+
     public bool HasGivenName => _givenName.Length != 0;
     public string GivenOrTypeName
     {
@@ -1133,7 +_,6 @@
             highestTierBossOrEvent = 398;
         }
 
-        CommonConditions.Boss.HighestTierBossOrEvent = highestTierBossOrEvent;
     }
 
     public void SpawnWithHigherTime(int timeMult)
@@ -32721,7 +_,7 @@
                     {
                         Vector2 vector182 = vector181;
                         vector182.Normalize();
-                        velocity = Vector2.SmoothStep(velocity, vector182 * Math.Min(8f, vector181.Length()), 0.2f);
+                        velocity = VectorExtensions.SmoothStep(velocity, vector182 * Math.Min(8f, vector181.Length()), 0.2f);
                     }
                 }
                 else if (num1219 < 210f)
@@ -32738,7 +_,7 @@
                         int num1233 = Projectile.NewProjectile(GetSpawnSource_ForProjectile(), base.Center.X, base.Center.Y, vector183.X, vector183.Y, 454, 40, 1f, Main.myPlayer, 0f, whoAmI);
                     }
 
-                    Vector2 vector184 = Vector2.SmoothStep(vector179, vector179 + vector180, (num1219 - 30f) / 180f) - base.Center;
+                    Vector2 vector184 = VectorExtensions.SmoothStep(vector179, vector179 + vector180, (num1219 - 30f) / 180f) - base.Center;
                     if (vector184 != Vector2.Zero)
                     {
                         Vector2 vector185 = vector184;
@@ -32787,7 +_,7 @@
                         }
                     }
 
-                    Vector2 vector187 = Vector2.SmoothStep(vector179, vector179 + vector180, 1f - (num1219 - 270f) / 30f) - base.Center;
+                    Vector2 vector187 = VectorExtensions.SmoothStep(vector179, vector179 + vector180, 1f - (num1219 - 270f) / 30f) - base.Center;
                     if (vector187 != Vector2.Zero)
                     {
                         Vector2 vector188 = vector187;
@@ -32803,7 +_,7 @@
                     {
                         Vector2 vector190 = vector189;
                         vector190.Normalize();
-                        velocity = Vector2.SmoothStep(velocity, vector190 * Math.Min(8f, vector189.Length()), 0.2f);
+                        velocity = VectorExtensions.SmoothStep(velocity, vector190 * Math.Min(8f, vector189.Length()), 0.2f);
                     }
                 }
             }
@@ -33026,7 +_,7 @@
                             {
                                 Vector2 vector200 = vector199;
                                 vector200.Normalize();
-                                velocity = Vector2.SmoothStep(velocity, vector200 * Math.Min(8f, vector199.Length()), 0.2f);
+                                velocity = VectorExtensions.SmoothStep(velocity, vector200 * Math.Min(8f, vector199.Length()), 0.2f);
                             }
                         }
                         else if (this.ai[1] < 210f)
@@ -33042,7 +_,7 @@
                                 int num1241 = Projectile.NewProjectile(GetSpawnSource_ForProjectile(), base.Center.X, base.Center.Y, vector201.X, vector201.Y, 454, 1, 1f, Main.myPlayer, 0f, whoAmI);
                             }
 
-                            Vector2 vector202 = Vector2.SmoothStep(vector197, vector197 + vector198, (this.ai[1] - 30f) / 180f) - base.Center;
+                            Vector2 vector202 = VectorExtensions.SmoothStep(vector197, vector197 + vector198, (this.ai[1] - 30f) / 180f) - base.Center;
                             if (vector202 != Vector2.Zero)
                             {
                                 Vector2 vector203 = vector202;
@@ -33078,7 +_,7 @@
                                 }
                             }
 
-                            Vector2 vector205 = Vector2.SmoothStep(vector197, vector197 + vector198, 1f - (this.ai[1] - 270f) / 30f) - base.Center;
+                            Vector2 vector205 = VectorExtensions.SmoothStep(vector197, vector197 + vector198, 1f - (this.ai[1] - 270f) / 30f) - base.Center;
                             if (vector205 != Vector2.Zero)
                             {
                                 Vector2 vector206 = vector205;
@@ -34620,7 +_,9 @@
             else if (this.ai[0] == 3f)
             {
                 rotation = velocity.X * 0.1f;
-                Vector2 vector249 = new Vector2(this.ai[1], this.ai[2]);
+                float ai1 = this.ai[1];
+                float ai2 = this.ai[2];
+                Vector2 vector249 = new Vector2(ai1, ai2);
                 Vector2 vector250 = vector249 - base.Center;
                 float num1361 = vector250.Length();
                 float num1362 = 2f;
@@ -38134,8 +_,8 @@
                         {
                             foreach (Vector2 item3 in list2)
                             {
-                                Vector2 value13 = Vector2.CatmullRom(vector304 + vector307, vector304, item3, item3 + vector307, num1569);
+                                Vector2 value13 = VectorExtensions.CatmullRom(vector304 + vector307, vector304, item3, item3 + vector307, num1569);
-                                Vector2 value14 = Vector2.CatmullRom(vector304 + vector307, vector304, item3, item3 + vector307, num1569 + 0.05f);
+                                Vector2 value14 = VectorExtensions.CatmullRom(vector304 + vector307, vector304, item3, item3 + vector307, num1569 + 0.05f);
                                 float num1570 = num1569;
                                 if (num1570 > 0.5f)
                                 {
@@ -96640,6 +_,7 @@
 
     private void UpdateCollision()
     {
+        if (!Main.tile.IsTileInLoadedSection(((int)(position.X / 16f)), ((int)(position.Y / 16f)))) return;
         Collision_WalkDownSlopes();
         bool lava = Collision_LavaCollision();
         lava = Collision_WaterCollision(lava);
